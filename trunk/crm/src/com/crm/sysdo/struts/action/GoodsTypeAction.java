/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crm.sysdo.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.crm.page.PageUtil;
import com.crm.per.dao.Permission;
import com.crm.pub.GlobVar;
import com.crm.sysdo.po.TGoodsType;
import com.crm.sysdo.service.inf.GoodsTypeServiceDao;
import com.crm.sysdo.struts.form.GoodsTypeForm;

/**
 * MyEclipse Struts Creation date: 10-23-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/admin/data" name="dataForm" input="/form/data.jsp"
 *                parameter="task" scope="request" validate="true"
 */
public class GoodsTypeAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private GoodsTypeServiceDao GoodsTypeServiceDao;
	private Permission perDao;

	/**
	 * 跳转到添加数字字典界面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toAddGoodsType(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		

		// 32 角色
		List sonList = perDao.getSonPerList("33");
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/GoodsType/addGoodsType.jsp");
	}

	/**
	 * 添加
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addGoodsType(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		GoodsTypeForm GoodsTypeForm = (GoodsTypeForm) form;
		TGoodsType GoodsType = new TGoodsType();
		BeanUtils.copyProperties(GoodsType, GoodsTypeForm);

		
		Boolean bool = this.GoodsTypeServiceDao.addGoodsType(GoodsType);

		if (bool) {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加成功！是否继续添加？')){location.href='"
									+ request.getContextPath()
									+ "/admin/GoodsType.do?task=toAddGoodsType';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/GoodsType.do?task=GoodsTypeList';}</script>");
			return null;
		} else {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加失败！是否重试？')){location.href='"
									+ request.getContextPath()
									+ "/admin/GoodsType.do?task=toAddGoodsType';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/GoodsType.do?task=GoodsTypeList';}</script>");
			return null;
		}
	}

	/**
	 * 数字字典列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward GoodsTypeList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		GoodsTypeForm GoodsTypeForm = (GoodsTypeForm) form;
		PageUtil pageUtil = new PageUtil(request, this.GoodsTypeServiceDao
				.getCount(null), GlobVar.PAGESIZE_BY_TWENTY_DATA);
		request.setAttribute("pageUtil", pageUtil);

		

		// 32 角色
		List sl = perDao.getSonPerList("33");
		request.setAttribute("sonPowerByMenu", sl);
		return new ActionForward("/admin/sysdo/GoodsType/GoodsTypelist.jsp");
	}

	/**
	 * 删除数字字典
	 * 
	 * 连同子类一起删除
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward deleteGoodsType(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		GoodsTypeForm GoodsTypeForm = (GoodsTypeForm) form;

		TGoodsType GoodsType = new TGoodsType();
		GoodsType.setId(new Long(GoodsTypeForm.getId()));

		Boolean bool = this.GoodsTypeServiceDao.deleteGoodsType(GoodsType);

		if (bool) {
			response.getWriter().print(
					"<script> alert('删除成功!将返回数字字典列表!');location.href='"
							+ request.getContextPath()
							+ "/admin/GoodsType.do?task=GoodsTypeList';</script>");
		} else {
			response.getWriter().print(
					"<script> alert('删除失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/GoodsType.do?task=GoodsTypeList';</script>");
		}
		return null;
	}

	/**
	 * 跳转到修改页面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toUpdateGoodsType(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		GoodsTypeForm GoodsTypeForm = (GoodsTypeForm) form;
		TGoodsType GoodsType = this.GoodsTypeServiceDao.getGoodsTypeById(new Long(GoodsTypeForm.getId()));
		BeanUtils.copyProperties(GoodsTypeForm, GoodsType);


		// 32 角色
		List sonList = perDao.getSonPerList("33");
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/GoodsType/updateGoodsType.jsp");
	}

	/**
	 * 修改
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward updateGoodsType(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		GoodsTypeForm GoodsTypeForm = (GoodsTypeForm) form;
		TGoodsType GoodsType = this.GoodsTypeServiceDao.getGoodsTypeById(new Long(GoodsTypeForm.getId()));
		BeanUtils.copyProperties(GoodsType, GoodsTypeForm);

		Boolean bool = false;
		try {
			bool = this.GoodsTypeServiceDao.updateGoodsType(GoodsType);
		} catch (Exception e) {
			e.printStackTrace();
		}
		if (bool) {
			response
					.getWriter()
					.print(
							"<script>if(confirm('数字字典修改成功,是否继续修改!')){location.href='"
									+ request.getContextPath()
									+ "/admin/GoodsType.do?task=toUpdateGoodsType&id="
									+ GoodsType.getId()
									+ "';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/GoodsType.do?task=GoodsTypeList';}</script>");

		} else {
			response.getWriter().print("<script>alert('数字字典修改失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/GoodsType.do?task=toUpdateGoodsType&id='"
							+ GoodsType.getId() + "';</script>");
		}
		return null;
	}

	public GoodsTypeServiceDao getGoodsTypeServiceDao() {
		return GoodsTypeServiceDao;
	}

	public void setGoodsTypeServiceDao(GoodsTypeServiceDao GoodsTypeServiceDao) {
		this.GoodsTypeServiceDao = GoodsTypeServiceDao;
	}

	public Permission getPerDao() {
		return perDao;
	}

	public void setPerDao(Permission perDao) {
		this.perDao = perDao;
	}
}
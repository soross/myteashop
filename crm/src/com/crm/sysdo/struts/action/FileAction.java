/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crm.sysdo.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.crm.page.PageUtil;
import com.crm.per.dao.Permission;
import com.crm.pub.GlobVar;
import com.crm.pub.PowerKey;
import com.crm.pub.po.TUser;
import com.crm.pub.service.dao.inf.UserServiceDao;
import com.crm.sysdo.po.TCollect;
import com.crm.sysdo.po.TData;
import com.crm.sysdo.po.TFile;
import com.crm.sysdo.po.TSickbed;
import com.crm.sysdo.service.inf.CollectServiceDao;
import com.crm.sysdo.service.inf.DataServiceDao;
import com.crm.sysdo.service.inf.DeptServiceDao;
import com.crm.sysdo.service.inf.FileServiceDao;
import com.crm.sysdo.service.inf.SickbedServiceDao;
import com.crm.sysdo.struts.form.CollectForm;
import com.crm.sysdo.struts.form.DataForm;
import com.crm.sysdo.struts.form.FileForm;
import com.crm.sysdo.struts.form.SickbedForm;
import com.crm.tool.PinYinUtils;
import com.crm.tool.FileUtils;

/**
 * MyEclipse Struts Creation date: 10-23-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/admin/data" name="dataForm" input="/form/data.jsp"
 *                parameter="task" scope="request" validate="true"
 */
public class FileAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private FileServiceDao FileServiceDao;
	private Permission perDao;
	private UserServiceDao userServiceDao;

	/**
	 * 图像列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward fileListByPhoto(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		FileForm FileForm = (FileForm) form;
		TFile File = new TFile();
		BeanUtils.copyProperties(File, FileForm);

		File.setFiletype(PowerKey.FILE_TYPE_PHOTO);

		// Integer count = this.FileServiceDao.getCount(File);
		// PageUtil pageUtil = new PageUtil(request, count,
		// GlobVar.PAGESIZE_BY_TEN_DATA);
		// request.setAttribute("pageUtil", pageUtil);

		// List list = this.FileServiceDao.getFileList(pageUtil, File);
		List list = this.FileServiceDao.getFileList(null, File);
		request.setAttribute("fileList", list);

		// 81
		List sonList = perDao.getSonPerList(PowerKey.KEY_FILE_PHOTO);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/file/filelist.jsp");
	}
	
	/**
	 * 图像列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward fileListByView(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		FileForm FileForm = (FileForm) form;
		TFile File = new TFile();
		BeanUtils.copyProperties(File, FileForm);

		File.setFiletype(PowerKey.FILE_TYPE_VIEW);

		// Integer count = this.FileServiceDao.getCount(File);
		// PageUtil pageUtil = new PageUtil(request, count,
		// GlobVar.PAGESIZE_BY_TEN_DATA);
		// request.setAttribute("pageUtil", pageUtil);

		// List list = this.FileServiceDao.getFileList(pageUtil, File);
		List list = this.FileServiceDao.getFileList(null, File);
		request.setAttribute("fileList", list);

		// 81
		List sonList = perDao.getSonPerList(PowerKey.KEY_FILE_VIEW);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/file/viewlist.jsp");
	}

	/**
	 * 跳转到添加病床
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toAddFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		// 82
		List sonList = perDao.getSonPerList(PowerKey.KEY_FILE_PHOTO);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/File/addFile.jsp");
	}

	/**
	 * 添加病床
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		FileForm FileForm = (FileForm) form;
		TFile File = new TFile();
		BeanUtils.copyProperties(File, FileForm);

		try {
			this.FileServiceDao.addFile(File);
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加成功！是否继续添加？')){location.href='"
									+ request.getContextPath()
									+ "/admin/File.do?task=toAddFile';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/File.do?task=FileList';}</script>");
		} catch (Exception e) {
			e.printStackTrace();
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加失败！是否重试？')){location.href='"
									+ request.getContextPath()
									+ "/admin/File.do?task=toAddFile';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/File.do?task=FileList';}</script>");
		}
		return null;
	}

	/**
	 * 跳转到修改病床
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toUpdateFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		FileForm FileForm = (FileForm) form;
		TFile File = this.FileServiceDao.seachFile(FileForm.getId());
		BeanUtils.copyProperties(FileForm, File);

		// 81
		List sonList = perDao.getSonPerList(PowerKey.KEY_FILE_PHOTO);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/File/updateFile.jsp");
	}

	/**
	 * 修改
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward updateFile(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		FileForm FileForm = (FileForm) form;
		TFile File = new TFile();
		BeanUtils.copyProperties(File, FileForm);

		try {
			this.FileServiceDao.updateFile(File);
			response.getWriter().print(
					"<script> if(confirm('修改成功！是否继续修改？')){location.href='"
							+ request.getContextPath()
							+ "/admin/File.do?task=toUpdateFile&id="
							+ File.getId() + "';}else{location.href='"
							+ request.getContextPath()
							+ "/admin/File.do?task=FileList';}</script>");
		} catch (Exception e) {
			e.printStackTrace();
			response.getWriter().print(
					"<script> if(confirm('修改失败！是否重试？')){location.href='"
							+ request.getContextPath()
							+ "/admin/File.do?task=toUpdateFile&id="
							+ File.getId() + "';}else{location.href='"
							+ request.getContextPath()
							+ "/admin/File.do?task=FileList';}</script>");

		}
		return null;
	}

	/**
	 * 删除
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward deleteFileByPhoto(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		FileForm FileForm = (FileForm) form;
		String filename = FileForm.getFilename();//("filename").toString();
		String srcname = request.getParameter("srcname");
		if (null == filename || null == srcname
				|| !filename.equalsIgnoreCase(srcname)) {
			response.getWriter().print(
					"<script> alert('删除失败,文件名错误！');location.href='"
							+ request.getContextPath()
							+ "/admin/file.do?task=fileListByPhoto';</script>");
		} else {
			String userid = ((TUser) (request.getSession().getAttribute("user")))
					.getUserid();
			// 获取用户信息
			TUser tuser = userServiceDao.getUser(userid);
			String password = request.getParameter("password").toString();
			if (null != tuser && null != tuser.getPassword()
					&& tuser.getPassword().equals(password)) {
				Long fileid = Long.valueOf(request.getParameter("fileid"));
				TFile File = new TFile();
				File.setId(fileid);
				
				try{
					this.FileServiceDao.deleteFile(File);
				}catch(Exception e){
					e.printStackTrace();
				}finally{
					//删除文件
					String path = request.getParameter("path");
					FileUtils.delFile(path,srcname);
				}
				
				response
						.getWriter()
						.print(
								"<script> alert('删除成功！');location.href='"
										+ request.getContextPath()
										+ "/admin/file.do?task=fileListByPhoto';</script>");

			} else {
				response
						.getWriter()
						.print(
								"<script> alert('删除失败,密码错误！');location.href='"
										+ request.getContextPath()
										+ "/admin/file.do?task=fileListByPhoto';</script>");
			}
		}

		return null;
	}

	/**
	 * 大图
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward bigPhoto(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		String path = request.getParameter("path");
		request.setAttribute("path", path);

		return new ActionForward("/admin/sysdo/file/big.jsp");
	}

	public Permission getPerDao() {
		return perDao;
	}

	public void setPerDao(Permission perDao) {
		this.perDao = perDao;
	}

	public FileServiceDao getFileServiceDao() {
		return FileServiceDao;
	}

	public void setFileServiceDao(FileServiceDao FileServiceDao) {
		this.FileServiceDao = FileServiceDao;
	}

	public UserServiceDao getUserServiceDao() {
		return userServiceDao;
	}

	public void setUserServiceDao(UserServiceDao userServiceDao) {
		this.userServiceDao = userServiceDao;
	}

}
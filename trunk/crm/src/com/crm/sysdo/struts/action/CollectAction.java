/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crm.sysdo.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.crm.page.PageUtil;
import com.crm.per.dao.Permission;
import com.crm.pub.GlobVar;
import com.crm.sysdo.po.TCollect;
import com.crm.sysdo.po.TData;
import com.crm.sysdo.po.TSickbed;
import com.crm.sysdo.service.inf.CollectServiceDao;
import com.crm.sysdo.service.inf.DataServiceDao;
import com.crm.sysdo.service.inf.DeptServiceDao;
import com.crm.sysdo.service.inf.SickbedServiceDao;
import com.crm.sysdo.struts.form.CollectForm;
import com.crm.sysdo.struts.form.DataForm;
import com.crm.sysdo.struts.form.SickbedForm;
import com.crm.tool.PinYinUtils;

/**
 * MyEclipse Struts Creation date: 10-23-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/admin/data" name="dataForm" input="/form/data.jsp"
 *                parameter="task" scope="request" validate="true"
 */
public class CollectAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private CollectServiceDao collectServiceDao;
	private Permission perDao;

	/**
	 * 病床列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward collectList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		CollectForm collectForm = (CollectForm) form;
		TCollect collect = new TCollect();
		BeanUtils.copyProperties(collect, collectForm);

		Integer count = this.collectServiceDao.getCount(collect);
		PageUtil pageUtil = new PageUtil(request, count,
				GlobVar.PAGESIZE_BY_TEN_DATA);
		request.setAttribute("pageUtil", pageUtil);

		List list = this.collectServiceDao.getCollectList(pageUtil, collect);
		request.setAttribute("collectList", list);

		// 81
		List sonList = perDao.getSonPerList("82");
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/sickbed/collectlist.jsp");
	}

	/**
	 * 跳转到添加病床
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toAddCollect(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		// 82
		List sonList = perDao.getSonPerList("82");
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/sickbed/addcollect.jsp");
	}

	/**
	 * 添加病床
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addSickbed(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		CollectForm collectForm = (CollectForm) form;
		TCollect collect = new TCollect();
		BeanUtils.copyProperties(collect, collectForm);


		try {
			this.collectServiceDao.addCollect(collect);
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加成功！是否继续添加？')){location.href='"
									+ request.getContextPath()
									+ "/admin/collect.do?task=toAddCollect';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/collect.do?task=collectList';}</script>");
		} catch (Exception e) {
			e.printStackTrace();
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加失败！是否重试？')){location.href='"
									+ request.getContextPath()
									+ "/admin/collect.do?task=toAddCollect';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/collect.do?task=collectList';}</script>");
		}
		return null;
	}

	/**
	 * 跳转到修改病床
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toUpdateCollect(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		CollectForm collectForm = (CollectForm) form;
		TCollect collect = this.collectServiceDao.seachCollect(collectForm
				.getId());
		BeanUtils.copyProperties(collectForm, collect);

		// 81
		List sonList = perDao.getSonPerList("82");
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/sickbed/updatecollect.jsp");
	}

	/**
	 * 修改
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward updateCollect(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		CollectForm collectForm = (CollectForm) form;
		TCollect collect = new TCollect();
		BeanUtils.copyProperties(collect, collectForm);

		try {
			this.collectServiceDao.updateCollect(collect);
			response.getWriter().print(
					"<script> if(confirm('修改成功！是否继续修改？')){location.href='"
							+ request.getContextPath()
							+ "/admin/collect.do?task=toUpdateCollect&id="
							+ collect.getId() + "';}else{location.href='"
							+ request.getContextPath()
							+ "/admin/collect.do?task=collectList';}</script>");
		} catch (Exception e) {
			e.printStackTrace();
			response.getWriter().print(
					"<script> if(confirm('修改失败！是否重试？')){location.href='"
							+ request.getContextPath()
							+ "/admin/collect.do?task=toUpdateCollect&id="
							+ collect.getId() + "';}else{location.href='"
							+ request.getContextPath()
							+ "/admin/collect.do?task=collectList';}</script>");

		}
		return null;
	}

	/**
	 * 删除
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward deleteCollect(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		CollectForm collectForm = (CollectForm) form;
		TCollect collect = new TCollect();
		collect.setId(collectForm.getId());
		
		this.collectServiceDao.deleteCollect(collect);
		response.getWriter().print(
				"<script> alert('删除成功！');location.href='"
						+ request.getContextPath()
						+ "/admin/sickbed.do?task=sickbedList';</script>");
		return null;
	}

	public Permission getPerDao() {
		return perDao;
	}

	public void setPerDao(Permission perDao) {
		this.perDao = perDao;
	}

}
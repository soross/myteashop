/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crm.sysdo.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.crm.page.PageUtil;
import com.crm.per.dao.Permission;
import com.crm.pub.GlobVar;
import com.crm.pub.PowerKey;
import com.crm.sysdo.po.TIcd;
import com.crm.sysdo.service.inf.IcdServiceDao;
import com.crm.sysdo.struts.form.IcdForm;
import com.crm.tool.PinYinUtils;

/**
 * MyEclipse Struts Creation date: 10-23-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/admin/data" name="dataForm" input="/form/data.jsp"
 *                parameter="task" scope="request" validate="true"
 */
public class IcdAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private IcdServiceDao IcdServiceDao;
	private Permission perDao;

	/**
	 * 跳转到添加数字字典界面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toAddIcd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		// 32 角色
		List sonList = perDao.getSonPerList(PowerKey.KEY_ICD);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/icd/addicd.jsp");
	}

	/**
	 * 添加
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addIcd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		IcdForm IcdForm = (IcdForm) form;
		TIcd Icd = new TIcd();
		BeanUtils.copyProperties(Icd, IcdForm);
		
		if(null!=IcdForm.getIcdname()&&!"".equals(IcdForm.getIcdname())){
			Icd.setPinyin(PinYinUtils.getAllFirstLetter(IcdForm.getIcdname()));
		}
		
		Boolean bool = this.IcdServiceDao.addIcd(Icd);

		if (bool) {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加成功！是否继续添加？')){location.href='"
									+ request.getContextPath()
									+ "/admin/icd.do?task=toAddIcd';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/icd.do?task=icdList';}</script>");
			return null;
		} else {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加失败！是否重试？')){location.href='"
									+ request.getContextPath()
									+ "/admin/icd.do?task=toAddIcd';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/icd.do?task=icdList';}</script>");
			return null;
		}
	}

	/**
	 * 数字字典列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward icdList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		IcdForm IcdForm = (IcdForm) form;
		TIcd icd = new TIcd();
		BeanUtils.copyProperties(icd, IcdForm);
		PageUtil pageUtil = new PageUtil(request, this.IcdServiceDao
				.getCount(icd), GlobVar.PAGESIZE_BY_TWENTY_DATA);
		request.setAttribute("pageUtil", pageUtil);
		
		List list = this.IcdServiceDao.getIcdList(pageUtil, icd);
		request.setAttribute("icdList", list);
		
		// 32 角色
		List sl = perDao.getSonPerList(PowerKey.KEY_ICD);
		request.setAttribute("sonPowerByMenu", sl);
		return new ActionForward("/admin/sysdo/icd/icdlist.jsp");
	}

	/**
	 * 删除数字字典
	 * 
	 * 连同子类一起删除
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward deleteIcd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		IcdForm IcdForm = (IcdForm) form;

		TIcd Icd = new TIcd();
		Icd.setId(new Long(IcdForm.getId()));

		Boolean bool = this.IcdServiceDao.deleteIcd(Icd);

		if (bool) {
			response.getWriter().print(
					"<script> alert('删除成功!将返回列表!');location.href='"
							+ request.getContextPath()
							+ "/admin/icd.do?task=icdList';</script>");
		} else {
			response.getWriter().print(
					"<script> alert('删除失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/icd.do?task=icdList';</script>");
		}
		return null;
	}

	/**
	 * 跳转到修改页面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toUpdateIcd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		IcdForm IcdForm = (IcdForm) form;
		TIcd Icd = this.IcdServiceDao.getIcdById(new Long(IcdForm.getId()));
		BeanUtils.copyProperties(IcdForm, Icd);

		// 32 角色
		List sonList = perDao.getSonPerList(PowerKey.KEY_ICD);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/icd/updateicd.jsp");
	}

	/**
	 * 修改
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward updateIcd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		IcdForm IcdForm = (IcdForm) form;
		TIcd Icd = this.IcdServiceDao.getIcdById(new Long(IcdForm.getId()));
		BeanUtils.copyProperties(Icd, IcdForm);
		
		if(null!=IcdForm.getIcdname()&&!"".equals(IcdForm.getIcdname())){
			Icd.setPinyin(PinYinUtils.getAllFirstLetter(IcdForm.getIcdname()));
		}
		Boolean bool = false;
		try {
			bool = this.IcdServiceDao.updateIcd(Icd);
		} catch (Exception e) {
			e.printStackTrace();
		}
		if (bool) {
			response
					.getWriter()
					.print(
							"<script>if(confirm('修改成功,是否继续修改!')){location.href='"
									+ request.getContextPath()
									+ "/admin/icd.do?task=toUpdateIcd&id="
									+ Icd.getId()
									+ "';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/icd.do?task=icdList';}</script>");

		} else {
			response.getWriter().print("<script>alert('修改失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/icd.do?task=toUpdateIcd&id='"
							+ Icd.getId() + "';</script>");
		}
		return null;
	}

	public IcdServiceDao getIcdServiceDao() {
		return IcdServiceDao;
	}

	public void setIcdServiceDao(IcdServiceDao IcdServiceDao) {
		this.IcdServiceDao = IcdServiceDao;
	}

	public Permission getPerDao() {
		return perDao;
	}

	public void setPerDao(Permission perDao) {
		this.perDao = perDao;
	}
}
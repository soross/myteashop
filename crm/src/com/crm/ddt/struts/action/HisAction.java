/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crm.ddt.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.crm.ddt.po.THis;
import com.crm.ddt.service.intf.HisServiceDao;
import com.crm.ddt.struts.form.HisForm;
import com.crm.page.PageUtil;
import com.crm.per.dao.Permission;
import com.crm.pub.GlobVar;
import com.crm.pub.PowerKey;
import com.crm.sysdo.service.inf.DeptServiceDao;
import com.crm.sysdo.service.inf.GoodsServiceDao;
import com.crm.tool.PinYinUtils;

/**
 * MyEclipse Struts Creation date: 10-23-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/admin/data" name="dataForm" input="/form/data.jsp"
 *                parameter="task" scope="request" validate="true"
 */
public class HisAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private HisServiceDao HisServiceDao;
	private DeptServiceDao DeptServiceDao;
	private Permission perDao;

	/**
	 * 跳转到添加数字字典界面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toAddHis(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		return new ActionForward("/admin/ddt/index.jsp");
	}

	/**
	 * 添加
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addHis(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		HisForm HisForm = (HisForm) form;
		THis His = new THis();
		BeanUtils.copyProperties(His, HisForm);

		Boolean bool = this.HisServiceDao.addHis(His);

		if (bool) {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加成功！是否继续添加？')){location.href='"
									+ request.getContextPath()
									+ "/admin/His.do?task=toAddHis';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/His.do?task=HisList';}</script>");
			return null;
		} else {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加失败！是否重试？')){location.href='"
									+ request.getContextPath()
									+ "/admin/His.do?task=toAddHis';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/His.do?task=HisList';}</script>");
			return null;
		}
	}

	/**
	 * 数字字典列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward HisList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		HisForm HisForm = (HisForm) form;
		THis His = new THis();
		BeanUtils.copyProperties(His, HisForm);
		PageUtil pageUtil = new PageUtil(request, this.HisServiceDao
				.getCount(His), GlobVar.PAGESIZE_BY_TWENTY_DATA);
		request.setAttribute("pageUtil", pageUtil);

		List list = this.HisServiceDao.getHisList(pageUtil, His);
		request.setAttribute("HisList", list);

		// 角色
		List sl = perDao.getSonPerList(PowerKey.KEY_HIS);
		request.setAttribute("sonPowerByMenu", sl);
		return new ActionForward("/admin/sysdo/His/Hislist.jsp");
	}

	/**
	 * 删除数字字典
	 * 
	 * 连同子类一起删除
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward deleteHis(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		HisForm HisForm = (HisForm) form;

		THis His = new THis();
		His.setId(new Long(HisForm.getId()));

		Boolean bool = this.HisServiceDao.deleteHis(His);

		if (bool) {
			response.getWriter().print(
					"<script> alert('删除成功!将返回列表!');location.href='"
							+ request.getContextPath()
							+ "/admin/His.do?task=HisList';</script>");
		} else {
			response.getWriter().print(
					"<script> alert('删除失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/His.do?task=HisList';</script>");
		}
		return null;
	}

	/**
	 * 跳转到修改页面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toUpdateHis(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		HisForm HisForm = (HisForm) form;
		THis His = this.HisServiceDao.getHisById(new Long(HisForm.getId()));
		BeanUtils.copyProperties(HisForm, His);

		// 角色
		List sonList = perDao.getSonPerList(PowerKey.KEY_HIS);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/His/updateHis.jsp");
	}

	/**
	 * 修改
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward updateHis(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		HisForm HisForm = (HisForm) form;
		THis His = this.HisServiceDao.getHisById(new Long(HisForm.getId()));
		BeanUtils.copyProperties(His, HisForm);

		Boolean bool = false;
		try {
			bool = this.HisServiceDao.updateHis(His);
		} catch (Exception e) {
			e.printStackTrace();
		}
		if (bool) {
			response.getWriter().print(
					"<script>if(confirm('修改成功,是否继续修改!')){location.href='"
							+ request.getContextPath()
							+ "/admin/His.do?task=toUpdateHis&id="
							+ His.getId() + "';}else{location.href='"
							+ request.getContextPath()
							+ "/admin/His.do?task=HisList';}</script>");

		} else {
			response.getWriter().print(
					"<script>alert('修改失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/His.do?task=toUpdateHis&id='"
							+ His.getId() + "';</script>");
		}
		return null;
	}

	public HisServiceDao getHisServiceDao() {
		return HisServiceDao;
	}

	public void setHisServiceDao(HisServiceDao HisServiceDao) {
		this.HisServiceDao = HisServiceDao;
	}

	public Permission getPerDao() {
		return perDao;
	}

	public void setPerDao(Permission perDao) {
		this.perDao = perDao;
	}

	public DeptServiceDao getDeptServiceDao() {
		return DeptServiceDao;
	}

	public void setDeptServiceDao(DeptServiceDao DeptServiceDao) {
		this.DeptServiceDao = DeptServiceDao;
	}
}
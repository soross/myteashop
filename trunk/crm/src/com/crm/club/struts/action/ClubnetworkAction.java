/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crm.club.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.crm.club.po.ClubNetInfo;
import com.crm.club.sevice.dao.intf.ClubServiceDao;
import com.crm.club.struts.form.ClubnetworkForm;

/**
 * MyEclipse Struts Creation date: 10-26-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/admin/clubnetwork" name="clubnetworkForm"
 *                input="/form/clubnetwork.jsp" parameter="task" scope="request"
 *                validate="true"
 */
public class ClubnetworkAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	private ClubServiceDao clubServiceDao;

	/**
	 * Method 网点列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward clubNetworkList(ActionMapping mapping,
			ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		ClubnetworkForm clubnetworkForm = (ClubnetworkForm) form;

		ClubNetInfo clubnetinfo = new ClubNetInfo();

		BeanUtils.copyProperties(clubnetinfo, clubnetworkForm);
		List<ClubNetInfo> clubnetinfoList = clubServiceDao
				.searchRoleList(clubnetinfo);

		List clublelist = clubServiceDao.seachClubLevList();
		List clubtypelist = clubServiceDao.seachClubTypeList();
		request.setAttribute("clubnetinfoList", clubnetinfoList);
		request.setAttribute("clubtypelist", clubtypelist);
		request.setAttribute("clublelist", clublelist);
		return new ActionForward("/admin/club/clublist.jsp");
	}

	/**
	 * Method 到新增网点页面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ClubnetworkForm clubnetworkForm = (ClubnetworkForm) form;
		List clublelist = clubServiceDao.seachClubLevList();
		List clubtypelist = clubServiceDao.seachClubTypeList();
		request.setAttribute("clubtypelist", clubtypelist);
		request.setAttribute("clublelist", clublelist);

		return new ActionForward("/admin/club/addclubnet.jsp?task=doAdd");
	}

	/**
	 * Method 新增网点
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addClubNet(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ClubnetworkForm clubnetworkForm = (ClubnetworkForm) form;

		ClubNetInfo netinfo = new ClubNetInfo();

		BeanUtils.copyProperties(netinfo, clubnetworkForm);

		if (clubServiceDao.addClubNetWork(netinfo)) {

			response
					.getWriter()
					.print(
							"<script> if(confirm('添加成功,是否继续?')){location.href='"
									+ request.getContextPath()
									+ "/admin/clubnetwork.do?task=add';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/clubnetwork.do?task=clubNetworkList';}</script>");

		} else {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加失败,是否继续?')){location.href='"
									+ request.getContextPath()
									+ "/admin/clubnetwork.do?task=add';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/clubnetwork.do?task=clubNetworkList';}</script>");

		}

		return null;
	}

	/**
	 * Method 到修改页面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward update(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ClubnetworkForm clubnetworkForm = (ClubnetworkForm) form;
		String clubIdStr = request.getParameter("clubid");
		Integer clubnetId = null;
		try {
			clubnetId = Integer.parseInt(clubIdStr);
		} catch (Exception e) {
			e.printStackTrace();
		}
		ClubNetInfo netInfo = clubServiceDao.getClubInfo(clubnetId);
		BeanUtils.copyProperties(clubnetworkForm, netInfo);
		List clublelist = clubServiceDao.seachClubLevList();
		List clubtypelist = clubServiceDao.seachClubTypeList();
		request.setAttribute("clubtypelist", clubtypelist);
		request.setAttribute("clublelist", clublelist);

		return new ActionForward("/admin/club/addclubnet.jsp?task=doUpdate");
	}

	/**
	 * Method 修改
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward updateClubNet(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ClubnetworkForm clubnetworkForm = (ClubnetworkForm) form;
		Long clubIdStr = clubnetworkForm.getClubnetId();

		Long clubnetId = null;

		if (clubIdStr != null && !"".equals(clubIdStr)) {
			clubnetId = clubIdStr;

		}

		ClubNetInfo netinfo = new ClubNetInfo();

		BeanUtils.copyProperties(netinfo, clubnetworkForm);
		netinfo.setClubnetState(Long.valueOf(0));

		if (clubServiceDao.updateClubNetWork(netinfo)) {

			response
					.getWriter()
					.print(
							"<script> if(confirm('操作成功,是否继续?')){location.href='"
									+ request.getContextPath()
									+ "/admin/clubnetwork.do?task=update&clubid="
									+ clubnetId
									+ "';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/clubnetwork.do?task=clubNetworkList';}</script>");

		}

		return null;
	}

	/**
	 * Method 删除
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward deleteClub(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ClubnetworkForm clubnetworkForm = (ClubnetworkForm) form;
		String clubIdStr = request.getParameter("clubid");
		Long clubnetId = null;
		try {
			clubnetId = Long.parseLong(clubIdStr);
		} catch (Exception e) {
			e.printStackTrace();
		}

		if (clubServiceDao.deleteClubNetWork(clubnetId)) {

			response
					.getWriter()
					.print(
							"<script> '删除成功！';"
									+ "location.href='"
									+ request.getContextPath()
									+ "/admin/clubnetwork.do?task=clubNetworkList';</script>");

		}

		return null;
	}

	/**
	 * Method 查看
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward seachClub(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ClubnetworkForm clubnetworkForm = (ClubnetworkForm) form;
		String clubIdStr = request.getParameter("clubid");
		Integer clubnetId = null;
		try {
			clubnetId = Integer.parseInt(clubIdStr);
		} catch (Exception e) {
			e.printStackTrace();
		}
		ClubNetInfo clubinfo = clubServiceDao.getClubInfo(clubnetId);

		request.setAttribute("clubinfo", clubinfo);
		List clublelist = clubServiceDao.seachClubLevList();
		List clubtypelist = clubServiceDao.seachClubTypeList();
		request.setAttribute("clubtypelist", clubtypelist);
		request.setAttribute("clublelist", clublelist);
		return new ActionForward("/admin/club/clubnetinfo.jsp");
	}

	/**
	 * Method 审核与注销
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward updateState(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ClubnetworkForm clubnetworkForm = (ClubnetworkForm) form;
		String clubIdStr = request.getParameter("clubid");
		Integer clubnetId = 0;
		String stateStr = request.getParameter("state");
		Long clubnetState = null;
		try {
			clubnetId = Integer.parseInt(clubIdStr);
		} catch (Exception e) {
			e.printStackTrace();
		}
		try {
			clubnetState = Long.parseLong(stateStr);
		} catch (Exception e) {
			e.printStackTrace();
		}
		ClubNetInfo netinfo = clubServiceDao.getClubInfo(clubnetId);
		netinfo.setClubnetState(clubnetState);

		if (clubServiceDao.updateClubNetWork(netinfo)) {

			response
					.getWriter()
					.print(
							"<script> if(confirm('操作成功！')){"
									+ "location.href='"
									+ request.getContextPath()
									+ "/admin/clubnetwork.do?task=clubNetworkList';}</script>");

		}

		return null;

	}

	public ClubServiceDao getClubServiceDao() {
		return clubServiceDao;
	}

	public void setClubServiceDao(ClubServiceDao clubServiceDao) {
		this.clubServiceDao = clubServiceDao;
	}
}
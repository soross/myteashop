/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crm.pub.struts.action;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.action.ActionRedirect;
import org.apache.struts.actions.DispatchAction;

import com.crm.pub.excel.ComparatorPower;
import com.crm.pub.po.TPower;
import com.crm.pub.po.TRole;
import com.crm.pub.po.TUser;
import com.crm.pub.service.dao.inf.UserServiceDao;
import com.crm.pub.struts.form.LoginForm;

/**
 * MyEclipse Struts Creation date: 10-22-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/login" name="loginForm" input="/form/login.jsp"
 *                parameter="task" scope="request" validate="true"
 */
public class LoginAction extends DispatchAction {

	private UserServiceDao userServiceDao;

	/**
	 * 登录方法,包括用户的信息验证
	 */
	public ActionForward login(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginForm = (LoginForm) form;
		ActionMessages messages = new ActionMessages();
		String code = request.getSession().getAttribute("rand").toString();
		if (loginForm.getCode().equals(code)) {//判断验证码
			TUser tuser = userServiceDao.getUser(loginForm.getUserId());
			if (tuser != null) {//判断用户
				if (tuser.getPassword().equals(loginForm.getPassword())) {
					Set<TRole> roles = tuser.getRoles();
					Set<TPower> powers = new TreeSet<TPower>();					
					for (TRole role : roles) {
					   powers.addAll(role.getPowers());
					}
					List<TPower> powerList = new ArrayList<TPower>(powers);
					ComparatorPower cp = new ComparatorPower();
					Collections.sort(powerList, cp);
					request.getSession().setAttribute("powers", powerList);
					request.getSession().setAttribute("user", tuser);
					return new ActionRedirect("/admin/main.jsp");
				} else {
					messages
							.add("msg", new ActionMessage("用户密码不正确!", false));
					this.saveMessages(request, messages);
				}

			} else {
				messages.add("msg", new ActionMessage("用户不存在!", false));
				this.saveMessages(request, messages);
			}
		} else {
			messages.add("msg", new ActionMessage("验证码不正确!", false));
			this.saveMessages(request, messages);
		}
		return mapping.getInputForward();
	}
	
	/**
	 * 退出
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward exit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception{
		request.getSession().invalidate();
		response.getWriter().write("<script>top.location.href='"+request.getContextPath()+"/login.jsp';</script>");		
		return null;
	}

	public UserServiceDao getUserServiceDao() {
		return userServiceDao;
	}

	public void setUserServiceDao(UserServiceDao userServiceDao) {
		this.userServiceDao = userServiceDao;
	}

}
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crm.sysdo.struts.action;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.crm.page.PageUtil;
import com.crm.per.dao.Permission;
import com.crm.pub.GlobVar;
import com.crm.pub.PowerKey;
import com.crm.sysdo.po.TToolSave;
import com.crm.sysdo.service.inf.ToolSaveServiceDao;
import com.crm.sysdo.struts.form.ToolSaveForm;
import com.crm.tool.PinYinUtils;

/**
 * MyEclipse Struts Creation date: 10-23-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/admin/data" name="dataForm" input="/form/data.jsp"
 *                parameter="task" scope="request" validate="true"
 */
public class ToolSaveAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private ToolSaveServiceDao ToolSaveServiceDao;
	private Permission perDao;

	/**
	 * 跳转到添加数字字典界面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toAddToolSave(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {

		// 32 角色
		List sonList = perDao.getSonPerList(PowerKey.KEY_TOOL_SAVE);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/tool/addtoolsave.jsp");
	}

	/**
	 * 添加
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addToolSave(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ToolSaveForm ToolSaveForm = (ToolSaveForm) form;
		TToolSave ToolSave = new TToolSave();
		BeanUtils.copyProperties(ToolSave, ToolSaveForm);
		
		if(null!=ToolSaveForm.getToolname()&&!"".equalsIgnoreCase(ToolSaveForm.getToolname())){
			ToolSave.setPinyin(PinYinUtils.getAllFirstLetter(ToolSaveForm.getToolname()));
		}

		Boolean bool = this.ToolSaveServiceDao.addToolSave(ToolSave);

		if (bool) {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加成功！是否继续添加？')){location.href='"
									+ request.getContextPath()
									+ "/admin/toolsave.do?task=toAddToolSave';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/toolsave.do?task=toolSaveList';}</script>");
			return null;
		} else {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加失败！是否重试？')){location.href='"
									+ request.getContextPath()
									+ "/admin/toolsave.do?task=toAddToolSave';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/toolsave.do?task=toolSaveList';}</script>");
			return null;
		}
	}

	/**
	 * 数字字典列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toolSaveList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ToolSaveForm ToolSaveForm = (ToolSaveForm) form;
		TToolSave toolSave = new TToolSave();
		//BeanUtils.copyProperties(toolSave, ToolSaveForm);
		
		PageUtil pageUtil = new PageUtil(request, this.ToolSaveServiceDao
				.getCount(toolSave), GlobVar.PAGESIZE_BY_TWENTY_DATA);
		request.setAttribute("pageUtil", pageUtil);
		
		List list = this.ToolSaveServiceDao.getToolSaveList(pageUtil, toolSave);
		request.setAttribute("toolsaveList", list);

		// 32 角色
		List sl = perDao.getSonPerList(PowerKey.KEY_TOOL_SAVE);
		request.setAttribute("sonPowerByMenu", sl);
		return new ActionForward("/admin/sysdo/tool/toolsavelist.jsp");
	}

	/**
	 * 删除数字字典
	 * 
	 * 连同子类一起删除
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward deleteToolSave(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ToolSaveForm ToolSaveForm = (ToolSaveForm) form;

		TToolSave ToolSave = new TToolSave();
		ToolSave.setId(new Long(ToolSaveForm.getId()));

		Boolean bool = this.ToolSaveServiceDao.deleteToolSave(ToolSave);

		if (bool) {
			response.getWriter().print(
					"<script> alert('删除成功!将返回列表!');location.href='"
							+ request.getContextPath()
							+ "/admin/toolsave.do?task=toolSaveList';</script>");
		} else {
			response.getWriter().print(
					"<script> alert('删除失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/toolsave.do?task=toolSaveList';</script>");
		}
		return null;
	}

	/**
	 * 跳转到修改页面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toUpdateToolSave(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ToolSaveForm ToolSaveForm = (ToolSaveForm) form;
		TToolSave ToolSave = this.ToolSaveServiceDao.getToolSaveById(new Long(ToolSaveForm.getId()));
		BeanUtils.copyProperties(ToolSaveForm, ToolSave);

		List sonList = perDao.getSonPerList(PowerKey.KEY_TOOL_SAVE);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/sysdo/tool/updatetoolsave.jsp");
	}

	/**
	 * 修改
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward updateToolSave(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		ToolSaveForm ToolSaveForm = (ToolSaveForm) form;
		TToolSave ToolSave = this.ToolSaveServiceDao.getToolSaveById(new Long(ToolSaveForm.getId()));
		BeanUtils.copyProperties(ToolSave, ToolSaveForm);
		
		if(null!=ToolSaveForm.getToolname()&&!"".equalsIgnoreCase(ToolSaveForm.getToolname())){
			ToolSave.setPinyin(PinYinUtils.getAllFirstLetter(ToolSaveForm.getToolname()));
		}
		
		Boolean bool = false;
		try {
			bool = this.ToolSaveServiceDao.updateToolSave(ToolSave);
		} catch (Exception e) {
			e.printStackTrace();
		}
		if (bool) {
			response
					.getWriter()
					.print(
							"<script>if(confirm('修改成功,是否继续修改!')){location.href='"
									+ request.getContextPath()
									+ "/admin/toolsave.do?task=toUpdateToolSave&id="
									+ ToolSave.getId()
									+ "';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/toolsave.do?task=toolSaveList';}</script>");

		} else {
			response.getWriter().print("<script>alert('修改失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/toolsave.do?task=toUpdateToolSave&id='"
							+ ToolSave.getId() + "';</script>");
		}
		return null;
	}

	public ToolSaveServiceDao getToolSaveServiceDao() {
		return ToolSaveServiceDao;
	}

	public void setToolSaveServiceDao(ToolSaveServiceDao ToolSaveServiceDao) {
		this.ToolSaveServiceDao = ToolSaveServiceDao;
	}

	public Permission getPerDao() {
		return perDao;
	}

	public void setPerDao(Permission perDao) {
		this.perDao = perDao;
	}
}
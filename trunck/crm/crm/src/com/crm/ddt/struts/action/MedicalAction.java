/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crm.ddt.struts.action;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.crm.ddt.po.TMedical;
import com.crm.ddt.service.intf.MedicalServiceDao;
import com.crm.ddt.struts.form.MedicalForm;
import com.crm.page.PageUtil;
import com.crm.per.dao.Permission;
import com.crm.pub.GlobVar;
import com.crm.pub.PowerKey;
import com.crm.sysdo.service.inf.DeptServiceDao;

/**
 * MyEclipse Struts Creation date: 10-23-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/admin/data" name="dataForm" input="/form/data.jsp"
 *                parameter="task" scope="request" validate="true"
 */
public class MedicalAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private MedicalServiceDao MedicalServiceDao;
	private DeptServiceDao DeptServiceDao;
	private Permission perDao;

	/**
	 * 跳转到添加数字字典界面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toAddMedical(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		
		// 角色
		List sl = perDao.getSonPerList(PowerKey.KEY_MEDICAL);
		request.setAttribute("sonPowerByMenu", sl);
		
		return new ActionForward("/admin/ddt/medical/addmedical.jsp");
	}

	/**
	 * 添加
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addMedical(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		MedicalForm MedicalForm = (MedicalForm) form;
		TMedical Medical = new TMedical();
		BeanUtils.copyProperties(Medical, MedicalForm);
		Medical.setCreateDate(new Date());
		Boolean bool = this.MedicalServiceDao.addMedical(Medical);

		if (bool) {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加成功！是否继续添加？')){location.href='"
									+ request.getContextPath()
									+ "/admin/medical.do?task=toAddMedical';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/medical.do?task=medicalList';}</script>");
			return null;
		} else {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加失败！是否重试？')){location.href='"
									+ request.getContextPath()
									+ "/admin/medical.do?task=toAddMedical';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/medical.do?task=medicalList';}</script>");
			return null;
		}
	}

	/**
	 * 数字字典列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward medicalList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		MedicalForm MedicalForm = (MedicalForm) form;
		TMedical Medical = new TMedical();
		BeanUtils.copyProperties(Medical, MedicalForm);
		PageUtil pageUtil = new PageUtil(request, this.MedicalServiceDao
				.getCount(Medical), GlobVar.PAGESIZE_BY_TWENTY_DATA);
		request.setAttribute("pageUtil", pageUtil);

		List list = this.MedicalServiceDao.getMedicalList(pageUtil, Medical);
		request.setAttribute("MedicalList", list);

		// 角色
		List sl = perDao.getSonPerList(PowerKey.KEY_MEDICAL);
		request.setAttribute("sonPowerByMenu", sl);
		return new ActionForward("/admin/ddt/medical/medicallist.jsp");
	}

	/**
	 * 删除数字字典
	 * 
	 * 连同子类一起删除
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward deleteMedical(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		MedicalForm MedicalForm = (MedicalForm) form;

		TMedical Medical = new TMedical();
		Medical.setId(new Long(MedicalForm.getId()));

		Boolean bool = this.MedicalServiceDao.deleteMedical(Medical);

		if (bool) {
			response.getWriter().print(
					"<script> alert('删除成功!将返回列表!');location.href='"
							+ request.getContextPath()
							+ "/admin/medical.do?task=medicalList';</script>");
		} else {
			response.getWriter().print(
					"<script> alert('删除失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/medical.do?task=medicalList';</script>");
		}
		return null;
	}

	/**
	 * 跳转到修改页面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toUpdateMedical(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		MedicalForm MedicalForm = (MedicalForm) form;
		TMedical Medical = this.MedicalServiceDao.getMedicalById(new Long(MedicalForm.getId()));
		BeanUtils.copyProperties(MedicalForm, Medical);

		// 角色
		List sonList = perDao.getSonPerList(PowerKey.KEY_MEDICAL);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/ddt/medical/updatemedical.jsp");
	}

	/**
	 * 修改
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward updateMedical(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		MedicalForm MedicalForm = (MedicalForm) form;
		TMedical Medical = this.MedicalServiceDao.getMedicalById(new Long(MedicalForm.getId()));
		//BeanUtils.copyProperties(Medical, MedicalForm);
		Medical.setSickid(MedicalForm.getSickid());
		Medical.setSickname(MedicalForm.getSickname());
		Medical.setMobile(MedicalForm.getMobile());
		Medical.setState(MedicalForm.getState());

		Boolean bool = false;
		try {
			bool = this.MedicalServiceDao.updateMedical(Medical);
		} catch (Exception e) {
			e.printStackTrace();
		}
		if (bool) {
			response.getWriter().print(
					"<script>if(confirm('修改成功,是否继续修改!')){location.href='"
							+ request.getContextPath()
							+ "/admin/medical.do?task=toUpdateMedical&id="
							+ Medical.getId() + "';}else{location.href='"
							+ request.getContextPath()
							+ "/admin/medical.do?task=medicalList';}</script>");

		} else {
			response.getWriter().print(
					"<script>alert('修改失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/medical.do?task=toUpdateMedical&id='"
							+ Medical.getId() + "';</script>");
		}
		return null;
	}

	public MedicalServiceDao getMedicalServiceDao() {
		return MedicalServiceDao;
	}

	public void setMedicalServiceDao(MedicalServiceDao MedicalServiceDao) {
		this.MedicalServiceDao = MedicalServiceDao;
	}

	public Permission getPerDao() {
		return perDao;
	}

	public void setPerDao(Permission perDao) {
		this.perDao = perDao;
	}

	public DeptServiceDao getDeptServiceDao() {
		return DeptServiceDao;
	}

	public void setDeptServiceDao(DeptServiceDao DeptServiceDao) {
		this.DeptServiceDao = DeptServiceDao;
	}
}
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.crm.ddt.struts.action;

import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.crm.ddt.po.THis;
import com.crm.ddt.po.TIllness;
import com.crm.ddt.po.TProve;
import com.crm.ddt.service.intf.HisServiceDao;
import com.crm.ddt.service.intf.IllnessServiceDao;
import com.crm.ddt.service.intf.ProveServiceDao;
import com.crm.ddt.struts.form.HisForm;
import com.crm.ddt.struts.form.IllnessForm;
import com.crm.ddt.struts.form.ProveForm;
import com.crm.page.PageUtil;
import com.crm.per.dao.Permission;
import com.crm.pub.GlobVar;
import com.crm.pub.PowerKey;
import com.crm.sysdo.service.inf.DeptServiceDao;
import com.crm.sysdo.service.inf.GoodsServiceDao;
import com.crm.tool.PinYinUtils;

/**
 * MyEclipse Struts Creation date: 10-23-2009
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/admin/data" name="dataForm" input="/form/data.jsp"
 *                parameter="task" scope="request" validate="true"
 */
public class IllnessAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private IllnessServiceDao IllnessServiceDao;
	private DeptServiceDao DeptServiceDao;
	private Permission perDao;

	/**
	 * 跳转到添加数字字典界面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toAddIllness(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		
		// 角色
		List sl = perDao.getSonPerList(PowerKey.KEY_Illness);
		request.setAttribute("sonPowerByMenu", sl);
		
		return new ActionForward("/admin/ddt/Illness/addIllness.jsp");
	}

	/**
	 * 添加
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward addIllness(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		IllnessForm IllnessForm = (IllnessForm) form;
		TIllness Illness = new TIllness();
		BeanUtils.copyProperties(Illness, IllnessForm);
		Illness.setCreateDate(new Date());
		Boolean bool = this.IllnessServiceDao.addIllness(Illness);

		if (bool) {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加成功！是否继续添加？')){location.href='"
									+ request.getContextPath()
									+ "/admin/Illness.do?task=toAddIllness';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/Illness.do?task=IllnessList';}</script>");
			return null;
		} else {
			response
					.getWriter()
					.print(
							"<script> if(confirm('添加失败！是否重试？')){location.href='"
									+ request.getContextPath()
									+ "/admin/Illness.do?task=toAddIllness';}else{location.href='"
									+ request.getContextPath()
									+ "/admin/Illness.do?task=IllnessList';}</script>");
			return null;
		}
	}

	/**
	 * 数字字典列表
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward IllnessList(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		IllnessForm IllnessForm = (IllnessForm) form;
		TIllness Illness = new TIllness();
		BeanUtils.copyProperties(Illness, IllnessForm);
		PageUtil pageUtil = new PageUtil(request, this.IllnessServiceDao
				.getCount(Illness), GlobVar.PAGESIZE_BY_TWENTY_DATA);
		request.setAttribute("pageUtil", pageUtil);

		List list = this.IllnessServiceDao.getIllnessList(pageUtil, Illness);
		request.setAttribute("IllnessList", list);

		// 角色
		List sl = perDao.getSonPerList(PowerKey.KEY_Illness);
		request.setAttribute("sonPowerByMenu", sl);
		return new ActionForward("/admin/ddt/Illness/Illnesslist.jsp");
	}

	/**
	 * 删除数字字典
	 * 
	 * 连同子类一起删除
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward deleteIllness(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		IllnessForm IllnessForm = (IllnessForm) form;

		TIllness Illness = new TIllness();
		Illness.setId(new Long(IllnessForm.getId()));

		Boolean bool = this.IllnessServiceDao.deleteIllness(Illness);

		if (bool) {
			response.getWriter().print(
					"<script> alert('删除成功!将返回列表!');location.href='"
							+ request.getContextPath()
							+ "/admin/Illness.do?task=IllnessList';</script>");
		} else {
			response.getWriter().print(
					"<script> alert('删除失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/Illness.do?task=IllnessList';</script>");
		}
		return null;
	}

	/**
	 * 跳转到修改页面
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward toUpdateIllness(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		IllnessForm IllnessForm = (IllnessForm) form;
		TIllness Illness = this.IllnessServiceDao.getIllnessById(new Long(IllnessForm.getId()));
		BeanUtils.copyProperties(IllnessForm, Illness);

		// 角色
		List sonList = perDao.getSonPerList(PowerKey.KEY_Illness);
		request.setAttribute("sonPowerByMenu", sonList);

		return new ActionForward("/admin/ddt/Illness/updateIllness.jsp");
	}

	/**
	 * 修改
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward updateIllness(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)
			throws Exception {
		IllnessForm IllnessForm = (IllnessForm) form;
		TIllness Illness = this.IllnessServiceDao.getIllnessById(new Long(IllnessForm.getId()));
		BeanUtils.copyProperties(Illness, IllnessForm);

		Boolean bool = false;
		try {
			bool = this.IllnessServiceDao.updateIllness(Illness);
		} catch (Exception e) {
			e.printStackTrace();
		}
		if (bool) {
			response.getWriter().print(
					"<script>if(confirm('修改成功,是否继续修改!')){location.href='"
							+ request.getContextPath()
							+ "/admin/Illness/Illness.do?task=toUpdateIllness&id="
							+ Illness.getId() + "';}else{location.href='"
							+ request.getContextPath()
							+ "/admin/Illness/Illness.do?task=IllnessList';}</script>");

		} else {
			response.getWriter().print(
					"<script>alert('修改失败,请重试!');location.href='"
							+ request.getContextPath()
							+ "/admin/Illness/Illness.do?task=toUpdateIllness&id='"
							+ Illness.getId() + "';</script>");
		}
		return null;
	}

	public IllnessServiceDao getIllnessServiceDao() {
		return IllnessServiceDao;
	}

	public void setIllnessServiceDao(IllnessServiceDao IllnessServiceDao) {
		this.IllnessServiceDao = IllnessServiceDao;
	}

	public Permission getPerDao() {
		return perDao;
	}

	public void setPerDao(Permission perDao) {
		this.perDao = perDao;
	}

	public DeptServiceDao getDeptServiceDao() {
		return DeptServiceDao;
	}

	public void setDeptServiceDao(DeptServiceDao DeptServiceDao) {
		this.DeptServiceDao = DeptServiceDao;
	}
}